{"version":3,"sources":["assets/produtos/1.png","assets/produtos/3.png","assets/produtos/4.png","assets/produtos/5.png","assets/bg/grocery-cart-with-item-1005638.jpg","assets/bg/labeled-can-lot-on-shelves-2387343.jpg","assets/bg/street-market-fruits-pineapple-shopping-3326215.jpg","assets/logo_round_alpha.png","assets/bg/index.js","assets/produtos/index.js","assets/index.js","styles/index.js","scenes/BoasVindas.js","components/BuildScene.js","components/BuildSection.js","components/Builder.js","components/BuildSlides.js","components/BuildSite.js","components/index.js","scenes/Encartes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bg1","bg2","bg3","products","product1","product3","product4","product5","logo","palette","primary","secondary","overlay","backgroundColor","full","height","width","vertical","flexDirection","fullAbsolute","position","zIndex","bottom","right","left","top","imageSlide","objectFit","center","alignItems","justifyContent","display","heading","fontSize","color","padding","title","foreground","Object","assign","keys","map","background","BoasVindas","style","margin","borderRadius","alt","src","BuildScene","props","scene","BuildSection","scenes","spaceBetween","slidesPerView","threshold","navigation","direction","pagination","clickable","scrollbar","draggable","index","key","Builder","Slides","imageStyle","useRef","slides","delay","rest","useState","setZoomed","toggle","current","swiper","zoom","out","console","error","scale","in","autoplay","stop","log","start","ref","effect","speed","overflow","slide","className","onDoubleClick","Site","BuildSite","Scene","Section","backgrounds","structure","section","configs","landscape","slidesPerColumn","portrait","square","Encartes","dimensions","item","useEffect","update","changeDirection","orientation","details","freeMode","breakpoints","transform","opacity","detail","cursor","onClick","alert","images","maxRatio","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","Autoplay","EffectFade","Zoom","calculateDimensions","aspectRatio","toFixed","window","innerHeight","innerWidth","result","setDimensions","updateWindowDimensions","clientHeight","clientWidth","addEventListener","useDimensions","Boolean","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bbf8208e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.179c25c2.png\";","module.exports = __webpack_public_path__ + \"static/media/3.9eb5b18e.png\";","module.exports = __webpack_public_path__ + \"static/media/4.b8194be0.png\";","module.exports = __webpack_public_path__ + \"static/media/5.02ea7ce2.png\";","module.exports = __webpack_public_path__ + \"static/media/grocery-cart-with-item-1005638.a2a9a20f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/labeled-can-lot-on-shelves-2387343.282235a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/street-market-fruits-pineapple-shopping-3326215.3dbb68a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_round_alpha.4ade5e9e.png\";","\n\nimport bg1 from './grocery-cart-with-item-1005638.jpg'\nimport bg2 from './labeled-can-lot-on-shelves-2387343.jpg'\nimport bg3 from './street-market-fruits-pineapple-shopping-3326215.jpg'\n\nexport { bg1, bg2, bg3 }\n\nexport default { bg1, bg2, bg3 }","\n\nimport product1 from './1.png'\n\nimport product3 from './3.png'\n\nimport product4 from './4.png'\n\nimport product5 from './5.png'\n\nconst products = [\n  product1,\n  product3,\n  product4,\n  product5,\n]\n\nexport { product1, product3, product4, product5, products }\n\nexport default { product1, product3, product4, product5 }","import * as backgrounds from './bg'\n\nimport * as products from './produtos'\n\nimport logo from './logo_round_alpha.png';\n\nexport { backgrounds, logo, products }\n\nexport default { backgrounds, logo }","\n\nconst palette = {\n  primary: '#015627',\n  secondary: '#f7de2d'\n}\n\nconst overlay = { backgroundColor: 'rgba(255,255,255,0.85)', }\nconst full = { height: '100%', width: '100%' }\nconst vertical = { flexDirection: 'column' }\nconst fullAbsolute = {\n  position: 'absolute',\n  zIndex: -1,\n  bottom: 0,\n  right: 0,\n  left: 0,\n  top: 0\n}\nconst imageSlide = {\n  ...full,\n  objectFit: 'cover'\n}\nconst center = {\n  alignItems: 'center',\n  justifyContent: 'center',\n  display: 'flex',\n}\nconst heading = {\n  fontSize: '10vmin',\n  color: palette.primary,\n  padding: '5vmin'\n}\nconst title = {\n  fontSize: '5vmin',\n  color: palette.primary,\n  padding: '1vmin'\n}\n\nconst foreground = Object.assign({}, ...Object.keys(palette).map(color => ({ [color]: { color: palette[color] } })))\n\nconst background = Object.assign({}, ...Object.keys(palette).map(color => ({ [color]: { backgroundColor: palette[color] } })))\n\nexport {\n  palette,\n  overlay,\n  full,\n  vertical,\n  fullAbsolute,\n  imageSlide,\n  center,\n  heading,\n  title,\n  foreground,\n  background\n}","import React from 'react'\n\nimport { logo } from '../assets'\n\nimport {\n  overlay,\n  full,\n  vertical,\n  fullAbsolute,\n  center,\n  heading\n} from '../styles'\n\nexport default function BoasVindas() {\n  return (\n    <div style={full}>\n      <div\n        style={{\n          ...full,\n          ...center,\n          ...vertical,\n        }}\n      >\n        <div\n          style={{\n            ...fullAbsolute,\n            ...overlay,\n            margin: '5vmin',\n            borderRadius: '1em'\n          }}\n        />\n        <img\n          alt=\"logo\"\n          style={{\n            width: '60vmin',\n            height: '60vmin'\n          }}\n          src={logo}\n        />\n        <div style={{\n          ...heading,\n          //filter: 'drop-shadow(0 0 0.1em white)'\n        }}>\n          Seja bem vindo!\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport {\n  overlay,\n  full,\n  center,\n  heading\n} from '../styles'\n\nexport default function BuildScene(props) {\n  const { scene } = props\n  switch (typeof scene) {\n    case 'string':\n      return (\n        <div style={{ ...center, ...full }}>\n          <div style={{ ...full, ...overlay }}>\n            <div style={heading}>\n              {scene}\n            </div>\n          </div>\n        </div>\n      )\n    default:\n      return (\n        <div style={{ ...center, ...full }}>\n          {scene}\n        </div>\n      )\n  }\n}","import React from 'react'\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport { BuildScene } from '../components'\n\nimport { full } from '../styles'\n\nexport default function BuildSection(props) {\n  const { scenes } = props\n  return (\n    <Swiper\n      spaceBetween={0}\n      slidesPerView={1}\n      threshold={25}\n      //nested\n      navigation\n      direction=\"horizontal\"\n      style={full}\n      pagination={{ clickable: true }}\n      scrollbar={{ draggable: true }}\n    >\n      {\n        scenes.map((scene, index) => (\n          <SwiperSlide key={`scene${index}`}>\n            <BuildScene scene={scene} />\n          </SwiperSlide>\n        ))\n      }\n    </Swiper>\n  )\n}","import BuildScene from './BuildScene'\n\nimport BuildSection from './BuildSection'\n\nimport BuildSite from './BuildSite'\n\nimport BuildSlides from './BuildSlides'\n\n\nconst Builder = {\n  Slides: BuildSlides,\n  Site: BuildSite,\n  Scene: BuildScene,\n  Section: BuildSection\n}\n\nexport default Builder","import React, { useState, useEffect } from 'react'\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport {\n  full,\n  fullAbsolute,\n  imageSlide,\n} from '../styles'\n\nexport default function Slides(props) {\n  const {\n    alt = 'background',\n    imageStyle,\n    useRef,\n    slides,\n    style,\n    delay = 5000,\n    ...rest\n  } = props\n\n  const [zoomed, setZoomed] = useState(false)\n\n  function toggle() {\n    const { current = { swiper: { zoom: { out: console.error } } } } = useRef\n    if (current.swiper.zoom.scale === 1/*  && !zoomed */) {\n      setZoomed(true)\n      current.swiper.zoom.in()\n      current.swiper.autoplay.stop()\n      console.log(current.swiper.autoplay)\n    } else if (current.swiper.zoom.scale > 1 /* && zoomed */) {\n      setZoomed(false)\n      current.swiper.zoom.out()\n      current.swiper.autoplay.start()\n    }\n\n  }\n\n  return (\n    <Swiper\n      ref={useRef}\n      threshold={5}\n      spaceBetween={0}\n      slidesPerView={1}\n      direction=\"horizontal\"\n      effect=\"fade\"\n      //loop\n      speed={2500}\n      autoplay={{ delay }}\n      style={{\n        ...full,\n        ...fullAbsolute,\n        ...(\n          rest.zoom ? { overflow: 'visible' } : {}\n        ),\n        ...style\n      }}\n      {...rest}\n    >\n      {\n        slides.map((slide, index) => (\n          <SwiperSlide key={`${alt}_slide_${index}`}>\n            <div className=\"swiper-zoom-container\" onDoubleClick={toggle}>\n              <img alt={`${alt}_slide_${index}`} style={{ ...imageSlide, ...imageStyle }} src={slide} />\n            </div>\n          </SwiperSlide>\n        ))\n      }\n    </Swiper>\n  )\n}\n","import React from 'react'\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport { BuildSection } from '../components'\n\nimport {\n  full,\n} from '../styles'\n\nimport { backgrounds } from '../assets'\n\nimport Builder from './Builder';\n\nconst { bg1, bg2, bg3 } = backgrounds\n\nexport default function BuildSite(props) {\n  const { structure } = props\n  return (\n    <div style={full}>\n      <Builder.Slides alt=\"site_background\" slides={[bg1, bg2, bg3]} />\n      <Swiper\n        spaceBetween={0}\n        slidesPerView={1}\n        threshold={50}\n        //nested\n        /* hashNavigation={{\n          watchState: true\n        }} */\n        direction=\"vertical\"\n        //loop\n        style={full}\n        scrollbar={{ draggable: true }}\n      >{\n          structure.map((section, index) => (\n            <SwiperSlide key={`section${index}`}>\n              <BuildSection scenes={section} />\n            </SwiperSlide>\n          ))\n        }</Swiper>\n    </div>\n  )\n}","import BuildScene from './BuildScene'\n\nimport BuildSection from './BuildSection'\n\nimport BuildSite from './BuildSite'\n\nimport BuildSlides from './BuildSlides'\n\nimport Builder from './Builder'\n\nexport {\n  BuildScene,\n  BuildSection,\n  BuildSite,\n  BuildSlides,\n  Builder\n}\n\nexport default { BuildScene, BuildSection, BuildSite }","import React, { useRef, useEffect } from 'react'\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport {\n  overlay,\n  full,\n  center,\n  heading,\n  title,\n  //palette,\n  foreground,\n  background,\n  fullAbsolute,\n} from '../styles'\n\nimport { Builder } from '../components'\n\nimport { products } from '../assets'\n/* \nconst square = {\n  backgroundColor: palette.secondary,\n  //width: '80vmin',\n  //height: '80vmin',\n  width: '90%',\n  height: '90%',\n} \nconst container = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignItems: 'center'\n}*/\n\nconst configs = {\n  landscape: {\n    slidesPerView: 1,\n    slidesPerColumn: 2,\n    /* slidesPerView: 1,\n    //slidesPerGroup: 2,\n    slidesPerColumn: 2, */\n    //slidesPerColumnFill: 'column'\n  },\n  portrait: {\n    slidesPerView: 2,\n    //slidesPerGroup: 2,\n    //slidesPerColumn: 2,\n  },\n  square: {\n    slidesPerView: 1,\n    //slidesPerGroup: 2,\n    slidesPerColumn: 1,\n  }\n}\n\nexport default function Encartes({ dimensions, item }) {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current.swiper.update()\n    ref.current.swiper.changeDirection(\n      dimensions.orientation === 'landscape'\n        ? \"vertical\"\n        : \"horizontal\")\n  }, [dimensions])\n  return (\n    <div style={{ ...center, ...full }}>\n      <div style={{ ...full, ...overlay, display: 'flex'/* , flexDirection: 'column'  */ }}>\n        <div style={{ position: 'absolute', top: 0, left: 0, zIndex: 2 }}>\n          <div style={heading}>\n            {item.details[0]}\n          </div>\n        </div>\n        <div style={full}>\n          <Swiper\n            spaceBetween={0}\n            freeMode\n            //nested\n            //zoom\n            direction=\"vertical\"\n            style={full}\n            breakpoints={{\n              '@0': configs.portrait,\n              '@0.9': configs.square,\n              '@1.1': configs.landscape\n            }}\n          //scrollbar={{ draggable: true }}\n          >\n            <SwiperSlide\n              style={{\n                ...full, ...center,\n                ...(\n                  dimensions.orientation === 'landscape'\n                    ? { width: '50%' }\n                    : {})\n              }}\n            >\n              <div\n                style={{\n                  zIndex: 2,\n                  padding: '5%',\n                  transform: 'skewY(2.5deg)',\n                  width: '60%'\n                }}\n              >\n                <div style={{\n\n                  ...background.primary,\n                  ...fullAbsolute,\n                  opacity: 0.85\n                }} />\n                {\n                  item.details.map((detail, index) => (\n                    <div\n                      key={detail}\n                      style={{ ...title, ...foreground.secondary }}>\n                      {detail}\n                    </div>\n                  ))\n                }\n                <div\n                  style={{\n                    cursor: 'pointer',\n                    ...title,\n                    ...background.secondary,\n                    ...foreground.primary\n                  }}\n                  onClick={alert}\n                >\n                  EU QUERO\n                </div>\n              </div>\n            </SwiperSlide>\n            <SwiperSlide\n              style={\n                dimensions.orientation === 'landscape'\n                  ? { /* pointerEvents: 'none', */ width: '50%' }\n                  : { /* pointerEvents: 'none' */ }\n              }\n\n            >\n              <Builder.Slides\n                useRef={ref}\n                slides={item.images}\n                style={{ zIndex: 1 }}\n                //speed={500}\n                threshold={25}\n                imageStyle={{\n                  objectFit: 'contain',\n                  width: '90%',\n                  height: '90%',\n                  margin: '5%',\n                  //pointerEvents: 'all'\n                }}\n                //nested\n                zoom={{\n                  toggle: false,\n                  maxRatio: 2\n                }}\n                effect=\"slide\"\n                direction={\n                  dimensions.orientation === 'landscape'\n                    ? \"vertical\"\n                    : \"horizontal\"\n                }\n              /* fadeEffect={{\n                crossFade: true\n              }} */\n              />\n            </SwiperSlide>\n          </Swiper>\n        </div>\n      </div>\n    </div >\n  )\n}","import React, { useRef, useState, useEffect } from 'react'\n\nimport SwiperCore, {\n  Navigation,\n  Pagination,\n  Scrollbar,\n  A11y,\n  Autoplay,\n  EffectFade,\n  Zoom\n} from 'swiper';\n\n//import 'swiper/swiper.scss';\n//import 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/zoom/zoom.scss';\n//import 'swiper/components/scrollbar/scrollbar.scss';\n\nimport './index.css';\nimport './swiper.scss';\nimport './navigation.scss';\nimport './scrollbar.scss';\n\nimport { products } from './assets'\n\nimport { BoasVindas, Encartes } from './scenes'\n\nimport { Builder } from './components'\n\nSwiperCore.use([\n  Navigation,\n  Pagination,\n  Scrollbar,\n  A11y,\n  Autoplay,\n  EffectFade,\n  Zoom\n]);\n\nfunction useDimensions() {\n\n  const calculateDimensions = ({ width, height }) => {\n    const aspectRatio = (width / height).toFixed(2)\n    let orientation\n    if (aspectRatio < 0.9) {\n      orientation = 'portrait'\n    } else if (aspectRatio >= 0.9 && aspectRatio <= 1.1) {\n      orientation = 'square'\n    } else if (aspectRatio > 1.1) {\n      orientation = 'landscape'\n    }\n    return ({\n      width,\n      height,\n      aspectRatio,\n      orientation\n    })\n  }\n\n  const {\n    innerHeight: height,\n    innerWidth: width\n  } = window\n  const result = calculateDimensions({ width, height })\n\n  const [dimensions, setDimensions] = useState(result)\n  const ref = useRef()\n  useEffect(() => {\n    const updateWindowDimensions = () => {\n      const {\n        clientHeight: height,\n        clientWidth: width\n      } = ref.current\n      const result = calculateDimensions({ width, height })\n      setDimensions(result)\n    }\n    updateWindowDimensions()\n    window.addEventListener('resize', updateWindowDimensions)\n  }, [])\n\n  return { ref, dimensions, setDimensions }\n}\n\nexport default () => {\n  const { ref, dimensions } = useDimensions()\n  return (\n    <div style={{ width: '100%', height: '100%' }} ref={ref}>\n      <Builder.Site\n        structure={[\n          [<BoasVindas />, 'Anúncios'],\n          ['Destaques', 'Ofertas', 'Promoções'],\n          [\n            <Encartes\n              item={{\n                details: [\n                  'Cesta Modelo 1',\n                  'R$ 79,00',\n                  '75 KG',\n                  '22 itens',\n                ],\n                images: products.products\n              }}\n              {...{ dimensions }}\n            />,\n            <Encartes\n              item={{\n                details: [\n                  'Cesta Modelo 2',\n                  'R$ 99,00',\n                  '96 KG',\n                  '27 itens',\n                ],\n                images: products.products\n              }}\n              {...{ dimensions }}\n            />,\n            <Encartes\n              item={{\n                details: [\n                  'Cesta Modelo 3',\n                  'R$ 119,00',\n                  '120 KG',\n                  '35 itens',\n                ],\n                images: products.products\n              }}\n              {...{ dimensions }}\n            />\n          ],\n          ['Orçamento', 'Formas de pagamento', 'Cálculo de frete', 'Compartilhar orçamento'],\n          ['Sobre a MR', 'História'],\n          ['Contato']\n        ]}\n      />\n    </div>\n  )\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}